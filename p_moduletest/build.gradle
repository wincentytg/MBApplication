if(moduleTestIsModule){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}



android {
    compileSdkVersion parent.ext.compileSdkVersion
    buildToolsVersion parent.ext.buildToolsVersion

    defaultConfig {
        targetSdkVersion parent.ext.targetSdkVersion
        minSdkVersion parent.ext.minSdkVersion
        versionCode parent.ext.versionCode
        versionName parent.ext.versionName
        flavorDimensions "versionCode"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug{}
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        channel_1 {}
    }
/*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
    （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            if (rootProject.ext.moduleTestIsModule) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'//直接运行的module
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies["appcompat_v7"]
    implementation rootProject.ext.dependencies["constraint_layout"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso_core"]
}
